@using ReflectionCorner.Areas.Identity
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">
    <AuthorizeView>
        <Authorized>
            <nav class="navbar navbar-expand-lg navbar-dark">
                <div class="container">
                    <a class="navbar-brand" href="/home">ReflectionCorner</a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNav">
                        <ul class="navbar-nav mr-auto">
                            <li class="nav-item">
                                <a class="nav-link" href="/home">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/profile">Profile</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/add-review">Add Review</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/my-reviews">My Reviews</a>
                            </li>
                        </ul>
                        <button class="btn btn-outline-light" @onclick="Logout">Logout</button>
                    </div>
                </div>
            </nav>
        </Authorized>
    </AuthorizeView>

    <main class="container mt-4">
        @Body
    </main>
</div>

@code {
    private async Task Logout()
    {
        var authStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        authStateProvider.MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("/");
    }
}